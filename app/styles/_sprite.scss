/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-call-away {
  background-image: url(../images/sprite.png);
  background-position: 0px 0px;
  width: 30px;
  height: 30px;
}
.icon-call-in {
  background-image: url(../images/sprite.png);
  background-position: -30px 0px;
  width: 30px;
  height: 30px;
}
.icon-call-out {
  background-image: url(../images/sprite.png);
  background-position: 0px -30px;
  width: 30px;
  height: 30px;
}
.icon-download {
  background-image: url(../images/sprite.png);
  background-position: -60px -44px;
  width: 11px;
  height: 10px;
}
.icon-drop-icon {
  background-image: url(../images/sprite.png);
  background-position: -60px 0px;
  width: 19px;
  height: 14px;
}
.icon-pointer-bottom {
  background-image: url(../images/sprite.png);
  background-position: -60px -14px;
  width: 17px;
  height: 15px;
}
.icon-pointer-top {
  background-image: url(../images/sprite.png);
  background-position: -60px -29px;
  width: 17px;
  height: 15px;
}
.icon-rec {
  background-image: url(../images/sprite.png);
  background-position: -30px -30px;
  width: 30px;
  height: 30px;
}
